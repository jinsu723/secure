day55

복습 -> alias -> 문서 출력 -> redirection -> 문서 편집(vi)

0. 기본 명령어 복습
	1) 시스템 정보 확인
		ifconfig	IP 주소 확인
		ip a		IP 주소 확인
		whoamin	현재 로그인 한 사용자 확인
		who		현재 로그인 한 사용자 확인
		uname -r	커널 버전 확인

	2) 파일 및 디렉토리 관리
		ls					목록 확인(-l 자세히, -a 숨김파일 포함, -R 하위 디렉토리 내 목록 확인)
		cd 경로				특정 디렉토리로 경로 이동
		pwd					현재 경로 확인
		mkdir				새 디렉토리 생성(-p 하위 폴더도 없을 경우 생성)
		rm 파일				파일 삭제(-f 강제, -r 디렉토리 하위 파일/디렉토리 삭제 -i 삭제 전 확인 요청(y/n), -d 빈 디렉토리만 삭제, -v 삭제되는 파일 자세히 출력)
		rmdir 디렉토리			디렉토리 삭제
		cp 원본 복사할대상		파일 복사(-r 디렉토리 복사)
		mv 원본 이동할대상		파일/디렉토리 이동
		mv 기존 새이름			파일/디렉토리 이름 변경
		find 경로 -name 파일명	특정 파일 찾기
							-name						대소문자 구분하여 파일 검색
							-type						파일 유형별 검색(f 일반 파일, d 디렉토리, l 심볼릭 장치)
							-atime +n	/ -mtime +n / -ctime +n	특정 시간 기준 검색
							-amin -n / -mmin -n / -cmin -n		특정 시간 기준 검색(분)
							-exec 명령어 {} \;				실행

1. alias 단축키 지정(별칭)
	alias					단축키 확인
	alias 단축키='명령어'	alias 생성
	unalias 단축키			alias 삭제

	* alias는 로그아웃하면 내용 삭제됨, 영구적 사용은 shell에 부여해야함

---------------------------------------------------------------------------------------------------------
	[실습]
		1. a1 = /alias 디렉토리 생성
			alias a1='mkdir /alias'

		2. a2 = /alias 디렉토리 내부에 test1 파일, test2 디렉토리
			alias a2='touch /alias/test1 && mkdir /alias/test2'

		3. a3 = /alias 디렉토리 강제 삭제
			alias a3='rm -rf /alias'

		4. a4 = /alias 디렉토리 생성과 같이 /alias 내부에 test1파일, test2디렉토리 생성
			alias a4='mkdir -p /alias/test2 && touch /alias/test1'
---------------------------------------------------------------------------------------------------------

2. 파일 내용 보기
	cat 파일명	파일 내용 전체 출력(-n 몇 줄인이 확인)

	head 파일명	파일의 앞에서부터 출력(기본 10줄 출력, -n 파일의 앞에서부터 n줄 출력)

	tail 파일명	파일의 끝에서부터 출력(기본 10줄 출력, -n 파일의 끝에서부터 n줄 출력)
		*) tail -n /etc/passwd /etc/shadow => 오류 발생, 문서마다 길이(마지막 줄)이 다르기 때문
			=> tail -nn /etc/passwd /etc/shadow 로 작성해야 한다
			=> tail /etc/passwd /etc/shadow 는 가능

	nl 파일명		파일의 내용을 출력하면서 줄번호를 추가
		-b a 모든 줄에 줄번호 추가(기본값)
		-b t 빈 줄에는 줄번호 추가하지 않음
		-n  ln 왼쪽 정렬된 줄번호 출력
		-n rn 오른쪽 정렬된 줄번호 출력(기본값)
		-w N 줄번호 너비 지정(-w n => n 자리로 표시)
		-v N 특정 줄번호부터 번호 매기기

	more 파일명	문서 끊어서 보기(기본값은 화면 단위, 숫자 지정 시 숫자 단위)
		spacebar : 단위별
		enter : 한 줄씩
		q : 나가기

	less 파일명	문서를 스크롤 하면서 읽기
		-N	줄 번호 표시
		-S	줄 바꿈 없이 가로 스크롤 가능하게 함
		-X	less 종료 후 화면을 지우지 않음

		q				나가기
		방향키 ↑ 또는 k	위로 한 줄 이동
		방향키 ↓ 또는 j	아래로 한 줄 이동
		PgUp 또는 b		한 페이지 위로 이동
		PgDn 또는 f		한 페이지 아래로 이동
		g				파일의 처음으로 이동
		G				파일의 끝으로 이동
		n				다음 검색 결과로 이동
		/검색어			아래 방향으로 검색
		?검색어			위 방향으로 검색
		&검색어			특정 단어가 포함된 줄만 표시
		h				도움말

--------------------------------------------------------------------------------------------------------------------------
	[실습]
		1) /etc/passwd 파일 위에서부터 3줄과 줄번호, /etc/shadow 파일 뒤에서부터 3줄과 줄번호 출력
			head -3 /etc/passwd | cat -n && tail -3 /etc/shadow | cat-n
			cat -3 /etc/passwd | head -3 && cat -n /etc/shadow | tail -3

		2) 출력 연습
			- /etc/passwd의 위에서 5번째 줄까지 출력
				head -5 /etc/passwd

			- /etc/inittab 문서를 4줄씩 끊어서 출력
				more -4 /etc/inittab

			- /etc/login.defs 문서를 번호를 붙여서 10줄씩 끊어서 출력
				cat -n /etc/login.defs | more -10

			- /etc 디렉토리 목록을 2줄씩 끊어서 출력
				ls -l /etc | more -2

			- /etc 디렉토리 목록을 번호를 붙여서 3줄씩 출력
				ls -l /etc | cat -n | more -3

			- /etc/passwd를 less로 열고 아래 끝까지 스크롤한 후 종료
				less /etc/passwd

			- /var/log/messages 파일을 less로 열고 줄 번호까지 표시한 상태에서 스크롤 한 후 종료
				less -N /var/log/messages

			- /var/log/messages 파일을 less로 열고 error 또는 fail 단어가 포함된 줄만 확인
				less -N /var/log/meessages
					/error	&error
					/fail		&fail

			- /etc/passwd 파일을 less로 열고 root로 시작하는 줄을 찾아 첫 번째 검색결과에서 시작
				(참고 less +/root)
				less +/root /etc/passwd
				less /etc/passwd	진입 후 /root 검색 n 다음 검색어 찾기
--------------------------------------------------------------------------------------------------------------------------

3. redirection
	입출력 방향을 바꾼다
	파일로 출력 저장, 오류 로그관리, 명령어 조합 등을 사용할 수 있다

	1) redirection 개념
		<	표준 입력을 파일에서 읽음
		>	표준 출력을 파일로 저장(덮어쓰기)
		>>	표준 출력을 파일에 추가(누적 저장)
		2>	표준 오류를 파일로 저장
		2>>	표준 오류를 파일에 추가
		&>	표준 출력과 오류를 같은 파일에 저장
		&>>	표준 출력과 오류를 같은 파일에 추가
		`	`

		ctrl + D 작업 종료
		ctrl + C 작업 취소
		ctrl + Z 작업 정지

	2) 오류 출력 리디렉션
		2>
			ex) 존재하지 않는 파일을 조회 => 오류
				오류 메시지를 test.log에 저장
				cat d 2> test.log
		2>>

		&>	표준 출력과 오류를 같은 파일로 저장
			ex) ls /etc /errortest &> testerror.log
				/etc 정상출력 내용, /errortest 오류 발생 testerror.log 파일에 저장
		&>>

	+) grep
		문자 포함 행 출력
		-c			카운트(문자가 포함된 줄)
		-P "문자|문자"	다중 필터링
		-i			대소문자 구분X
		-v			숨기기(제외)

4. VI 편집기(Visual Editor)
	리눅스에서 가장 기본적인 문서 편집기

	1) Linux VS Window 편집기
		Linux				Window
		=======================================================================
		vi					notepad(메모장)
							1974년 빌 조이
		vim					wordpad
							1991년 브람 물레나르
		nano			=>		간단한 텍스트 편집기
							1999년 크리스 알레그래타
		emacs		=>		nano보다 발전된 텍스트 편집기
							1976 리차드 스톨만
		Libreoffice			ms-office
		(Libre writer 워드 등)

	2) vi 기본 모드
		명령모드			vi편집기 실행 시 처음 진입하는 기본모드	: 입력 후 명령 실행(w 저장, q 나가기, ! 강제),
														:! 외부 명령 실행
														:.! 현제 커서가 위치한 줄에 외부 명령 실행 결과를 삽입
														/ 문자열 검색(현재 커서 기준 아래방향)
															n 다음 검색 결과로 이동
															N 이전 검색 결과로 이동
														? 문자열 검색(현재 커서 기준 위방향)
															n 다음 검색 결과로 이동
															N 이전 검색 결과로 이동
		입력모드(편집모드)	텍스트 입력 가능					i, a, o 등으로 입력 후 전환
		기본모드(이동모드)	이동, 삭제, 복사, 붙여넣기 등 가능		vi 실행 시 기본 모드(h, j, k, l로 이동)
		esc	해당 모드에서 벗어나기(뺴져나오기)

	3) vi 단축키
		[기본모드]
			- 방향키 이동
				h	왼쪽(서)
				j	아래(남)
				k	위(북)
				l	오른쪽(동)

			- 단어 이동
				w	west	
				e	east
				b	back
				x	한 글자씩 삭제

			- 되돌리기
				u		되돌리기
				ctrl + u 	역 되돌리기

			- 행 이동
				0	행 최초
				$	행 끝

			- 문서 내 이동
				gg	문서 최초 이동
				G	문서 끝 이동

			- 번호 붙이기(출력)
				:set un	번호 출력
				:set nonu	번호 숨기기

			- 번호 이동
				:숫자		번호로 이동

			- 화면 내 이동
				shift + h		상당
				shift + m		중단
				shift + l		하단

			- 페이지 이동
				ctrl + f		다음 페이지(forward)
				ctrl + b		이전 페이지(back)

			- 마크 이동(책갈피)
				m?		지정(marking)
				`?		호출(숫자 1 옆에 `)

			- 삭제 및 복사
				x			한 글자씩 삭제
				dd			행 삭제
				숫자 + dd		커서 기준 숫자만큼 행 삭제
				yy			행 복사
				p			붙여넣기
				숫자 + yy		커서 기준 숫자 행 만큼 복사
				dw			단어 삭제
				d$			행 끝까지 삭제
				d0			행 최초까지 삭제
				dgg			문서 최초까지 삭제
				d + G		문서 끝까지 삭제
				yw			단어 복사

		[편집모드/입력모드] --insert--
			i	현재 커서 그 자리
			I	현재 줄이 맨 앞에서
			a	한 칸 앞
			A	현재 줄의 맨 뒤에서
			o	현재 커서 아래 행 추가
			O	위로 행 추가
			s	글자 치환

			편집 모드에서 기본 모드로 전환 -> ESC

		[명령모드]
			:q	나가기(저장을 해야 나가진다)
			:q!	강제 종료
			:w	저장
			:wq	저장 후 종료(shift + zz)

	4) 복구(restore)
		.파일명.swp	파일이 있으면 비정상적인 종료로 인한 복구 파일이 생성됨(.swp는 스왑(swap)파일)
		해당 파일을 vi, vim으로 열었을 때 복구 관련 메시지가 뜸 > enter > 진입 가능

		원본 파일을 복구 모드로 실행
		vi -r 원본파일명
			복구 모드로 실행되어 기존 편집 내용을 복구 가능

		복구할 필요가 없거나 .swp 파일이 필요없을 경우 삭제
		rm .파일명.swp

		vi를 강제실행하여 편집
		vi 파일명	경고 메시지가 뜨면 E를 입력하여 강제 편집 가능

		.swp를 무시하고 실행
		vi -n 파일명

	5) vi 관련 셀
		/etc/virc		vi 설정 파일
			vi 파일명으로 사용할 때 적용되는 설정이 포함됨

			echo "se nu" >> virc
			vi /etc/virc 진입 후 se nu 추가 후 저장
		/etc/vimrc	vim 전역 설정 파일

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	[vi 실습 문제]
		1. /vitest 디렉토리를 만들고 login.defs, grub.cfg, inittab 파일을 검색 후 복사
		2. /vitest/login.defs를 vi로 열고 절대 나가지 않는다.
			1) /viexe 디렉토리를 만들고 / 디렉토리의 목록을 자세히 출력한다
			2) /viexe 디렉토리 안에 1 2 3 4 파일 4개와 a1 a2 a3 a4 디렉토리 4개 생성한다(현제 위치는 /vitest)
			3) /viexr 디렉토리 안에 목록을 문서 가장 위에 삽입한다
			4) 3)번의 출력 내용(/viexe)을 문서 맨 마지막에 a1 a2 a3 a4 디렉토리 목록만 남도록 편집한다(<====편집!!)
			5) 4)번의 내용을 12번째 라인에 삽입한 뒤 /vitest/task로 저장
			6) 문서의 모든 DAYS를 sun으로 치환한 뒤 /vitest/task로 저장
			7) 새 문서를 열어서 ip내용을 삽입한 뒤 /vitest/iptest로 저장
			8) /vitest의 login.defs inittab grub.cfg의 내용과 task iptest의 내용을 위에서 2번째 줄까지의 내용만 /home/vitest/linux/sun 파일로 저장
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------